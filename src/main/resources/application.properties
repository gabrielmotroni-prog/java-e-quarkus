# full qualify name
bitcoin-api/mp-rest/url=https://api.mockfly.dev/mocks/ad58e432-15a7-4b11-8877-2b7306b6ed02
bitcoin-api/mp-rest/scope=javax.enterprise.context.RequestScoped


# documentaçãp e funciona
# Your configuration properties
#quarkus.rest-client."br.com.alura.service.BitcoinService".url=https://api.mockfly.dev/mocks/ad58e432-15a7-4b11-8877-2b7306b6ed02
#quarkus.rest-client."br.com.alura.service.BitcoinService".scope=jakarta.inject.Singleton

# configuracoes do projeto

#verify-host
quarkus.rest-client.extensions-api.verify-host=false
# Defina o nível de log para depuração para o módulo Rest Client
quarkus.log.category."org.jboss.resteasy.reactive.client".level=DEBUG



# configuracao datasource
quarkus.datasource.db-kind=mysql
quarkus.datasource.username=root
#quarkus.datasource.password=senha-root
quarkus.datasource.password=root
# url mysql dockerlocal
#quarkus.datasource.jdbc.url=jdbc:mysql://localhost:3306/bitcoin?autoReconnect=true
# url mysql docker compose
quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_URL}
#quarkus.datasource.jdbc.url=jdbc:mysql://172.17.0.2:3306/bitcoin
# minimo e maximo de usuario conectados
quarkus.datasource.jdbc.max-size=16
#quarkus.datasource.users.min-size=0
#quarkus.datasource.users.max-size=10

#
# rodar mysql local
#

#
# rodar com docker compose
#